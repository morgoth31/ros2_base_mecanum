version: '3.8'

services:
  ros_humble_desktop:
    build:
      context: . 
      dockerfile: Dockerfile
      # Passer les arguments UID/GID de l'hôte au build
      args:
        USER_UID: "${UID}"
        USER_GID: "${GID}"

    container_name: ros_humble_desktop
    privileged: true 

    # --- Configuration Utilisateur (UID/GID) ---
    # Utilise l'UID et le GID de l'hôte (définis dans le fichier .env)
    # pour que les fichiers créés dans les volumes aient les bonnes permissions.
    user: "${UID}:${GID}"

    group_add:
      - video
    
    network_mode: "host"

    environment:
      # --- Configuration X11 (pour RViz2) ---
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1

      # --- Définition du HOME pour l'utilisateur UID/GID ---
      # Nous définissons un répertoire HOME pour que .Xauthority soit trouvé
      - HOME=/home/ros

      # --- Configuration ROS 2 (Exemples) ---
      - ROS_DOMAIN_ID=28
      # - ROS_DISCOVERY_SERVER=192.168.1.100:11811

    volumes:
      # --- Montage X11 (pour RViz2) ---
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      # Monte le fichier d'autorisation X11 dans le nouveau HOME
      - ~/.Xauthority:/home/ros/.Xauthority:ro

      - /dev/dri/renderD128:/dev/dri/renderD128  # Accès au GPU pour l'accélération graphique
      # --- Montage du projet ---
      # Monte le projet dans le nouveau HOME
      - .:/home/ros/ros2_ws:rw
      
      # --- [Optionnel] Persistance du cache colcon/rosdep ---
      # Permet de garder le cache entre les recréations de conteneur
      # - ros_cache:/home/ros/.cache
    devices:
      - /dev/dri:/dev/dri  # Accès au GPU pour l'accélération graphique

    # Définit le répertoire de travail par défaut
    working_dir: /home/ros/ros2_ws

    command: tail -f /dev/null
    
    # --- Configuration GPU NVIDIA ---
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         # Type de périphérique : 'gpu'
    #         - driver: nvidia
    #           count: all      # Alloue tous les GPU disponibles. Utilisez '1' pour un seul GPU.
    #           capabilities:   # Capacités nécessaires : 'gpu' et 'utility' pour les outils.
    #             - gpu
    #             - utility
# --- [Optionnel] Volume nommé pour le cache ---
# volumes:
#   ros_cache: